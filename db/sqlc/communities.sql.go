// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: communities.sql

package db

import (
	"context"
	"database/sql"
)

const createCommunity = `-- name: CreateCommunity :one
INSERT INTO communities (
    communities_name,
    description,
    community_type
) VALUES (
    $1, $2, $3
) RETURNING id, communities_name, description, community_type, created_at
`

type CreateCommunityParams struct {
	CommunitiesName string         `json:"communities_name"`
	Description     sql.NullString `json:"description"`
	CommunityType   string         `json:"community_type"`
}

func (q *Queries) CreateCommunity(ctx context.Context, arg CreateCommunityParams) (Community, error) {
	row := q.db.QueryRowContext(ctx, createCommunity, arg.CommunitiesName, arg.Description, arg.CommunityType)
	var i Community
	err := row.Scan(
		&i.ID,
		&i.CommunitiesName,
		&i.Description,
		&i.CommunityType,
		&i.CreatedAt,
	)
	return i, err
}
