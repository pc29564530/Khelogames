// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: profile.sql

package db

import (
	"context"
)

const createProfile = `-- name: CreateProfile :one
INSERT INTO profile (
    owner,
    full_name,
    bio,
    avatar_url,
    cover_url
) VALUES (
    $1, $2, $3, $4, $5
) RETURNING id, owner, full_name, bio, avatar_url, cover_url, created_at
`

type CreateProfileParams struct {
	Owner     string `json:"owner"`
	FullName  string `json:"full_name"`
	Bio       string `json:"bio"`
	AvatarUrl string `json:"avatar_url"`
	CoverUrl  string `json:"cover_url"`
}

func (q *Queries) CreateProfile(ctx context.Context, arg CreateProfileParams) (Profile, error) {
	row := q.db.QueryRowContext(ctx, createProfile,
		arg.Owner,
		arg.FullName,
		arg.Bio,
		arg.AvatarUrl,
		arg.CoverUrl,
	)
	var i Profile
	err := row.Scan(
		&i.ID,
		&i.Owner,
		&i.FullName,
		&i.Bio,
		&i.AvatarUrl,
		&i.CoverUrl,
		&i.CreatedAt,
	)
	return i, err
}

const editProfile = `-- name: EditProfile :one
UPDATE profile
SET full_name=$1, avatar_url=$2, bio=$3, cover_url=$4
WHERE id=$5
RETURNING id, owner, full_name, bio, avatar_url, cover_url, created_at
`

type EditProfileParams struct {
	FullName  string `json:"full_name"`
	AvatarUrl string `json:"avatar_url"`
	Bio       string `json:"bio"`
	CoverUrl  string `json:"cover_url"`
	ID        int64  `json:"id"`
}

func (q *Queries) EditProfile(ctx context.Context, arg EditProfileParams) (Profile, error) {
	row := q.db.QueryRowContext(ctx, editProfile,
		arg.FullName,
		arg.AvatarUrl,
		arg.Bio,
		arg.CoverUrl,
		arg.ID,
	)
	var i Profile
	err := row.Scan(
		&i.ID,
		&i.Owner,
		&i.FullName,
		&i.Bio,
		&i.AvatarUrl,
		&i.CoverUrl,
		&i.CreatedAt,
	)
	return i, err
}

const getProfile = `-- name: GetProfile :one
SELECT id, owner, full_name, bio, avatar_url, cover_url, created_at FROM profile
WHERE owner=$1
`

func (q *Queries) GetProfile(ctx context.Context, owner string) (Profile, error) {
	row := q.db.QueryRowContext(ctx, getProfile, owner)
	var i Profile
	err := row.Scan(
		&i.ID,
		&i.Owner,
		&i.FullName,
		&i.Bio,
		&i.AvatarUrl,
		&i.CoverUrl,
		&i.CreatedAt,
	)
	return i, err
}
