// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0

package db

import (
	"database/sql"
	"time"

	"github.com/google/uuid"
)

type Ball struct {
	ID         int64         `json:"id"`
	MatchID    sql.NullInt64 `json:"match_id"`
	OverNumber sql.NullInt64 `json:"over_number"`
	BallNumber sql.NullInt64 `json:"ball_number"`
	Runs       sql.NullInt64 `json:"runs"`
	Wickets    sql.NullInt64 `json:"wickets"`
	BatsmanID  sql.NullInt64 `json:"batsman_id"`
	BowlerID   sql.NullInt64 `json:"bowler_id"`
	FielderID  sql.NullInt64 `json:"fielder_id"`
}

type Bat struct {
	ID           int64         `json:"id"`
	BatsmanID    sql.NullInt64 `json:"batsman_id"`
	MatchID      sql.NullInt64 `json:"match_id"`
	RunsScored   sql.NullInt64 `json:"runs_scored"`
	BallsFaced   sql.NullInt64 `json:"balls_faced"`
	WicketsTaken sql.NullInt64 `json:"wickets_taken"`
}

type Club struct {
	ID        int64     `json:"id"`
	ClubName  string    `json:"club_name"`
	AvatarUrl string    `json:"avatar_url"`
	Sport     string    `json:"sport"`
	Owner     string    `json:"owner"`
	CreatedAt time.Time `json:"created_at"`
	Country   string    `json:"country"`
	Gender    string    `json:"gender"`
}

type ClubMember struct {
	ID       int64 `json:"id"`
	ClubID   int64 `json:"club_id"`
	PlayerID int64 `json:"player_id"`
}

type ClubPlayed struct {
	PlayedID     int64 `json:"played_id"`
	TournamentID int64 `json:"tournament_id"`
	ClubID       int64 `json:"club_id"`
}

type Comment struct {
	ID          int64     `json:"id"`
	ThreadID    int64     `json:"thread_id"`
	Owner       string    `json:"owner"`
	CommentText string    `json:"comment_text"`
	CreatedAt   time.Time `json:"created_at"`
}

type Community struct {
	ID              int64     `json:"id"`
	Owner           string    `json:"owner"`
	CommunitiesName string    `json:"communities_name"`
	Description     string    `json:"description"`
	CommunityType   string    `json:"community_type"`
	CreatedAt       time.Time `json:"created_at"`
}

type Communitymessage struct {
	ID             int64     `json:"id"`
	CommunityName  string    `json:"community_name"`
	SenderUsername string    `json:"sender_username"`
	Content        string    `json:"content"`
	SentAt         time.Time `json:"sent_at"`
}

type CricketMatch struct {
	ID                int64          `json:"id"`
	TournamentID      sql.NullInt64  `json:"tournament_id"`
	HomeTeamID        sql.NullInt64  `json:"home_team_id"`
	AwayTeamID        sql.NullInt64  `json:"away_team_id"`
	Venue             string         `json:"venue"`
	City              string         `json:"city"`
	StartTimestamp    time.Time      `json:"start_timestamp"`
	EndTimestamp      sql.NullTime   `json:"end_timestamp"`
	TossWinner        sql.NullString `json:"toss_winner"`
	TossDecision      sql.NullString `json:"toss_decision"`
	StatusCode        sql.NullInt32  `json:"status_code"`
	StatusDescription sql.NullString `json:"status_description"`
	CurrentPeriod     sql.NullString `json:"current_period"`
	TvUmpireName      sql.NullString `json:"tv_umpire_name"`
	Umpire1Name       sql.NullString `json:"umpire1_name"`
	Umpire2Name       sql.NullString `json:"umpire2_name"`
}

type CricketMatchScore struct {
	ID           int64 `json:"id"`
	MatchID      int64 `json:"match_id"`
	TournamentID int64 `json:"tournament_id"`
	TeamID       int64 `json:"team_id"`
	Score        int64 `json:"score"`
	Wickets      int64 `json:"wickets"`
	Overs        int64 `json:"overs"`
	Extras       int64 `json:"extras"`
	Innings      int64 `json:"innings"`
}

type CricketMatchTeamToss struct {
	ID           int64  `json:"id"`
	TournamentID int64  `json:"tournament_id"`
	MatchID      int64  `json:"match_id"`
	TossWon      int64  `json:"toss_won"`
	BatOrBowl    string `json:"bat_or_bowl"`
}

type CricketScore struct {
	ID            int64  `json:"id"`
	MatchID       int64  `json:"match_id"`
	TeamID        int64  `json:"team_id"`
	Inning        int32  `json:"inning"`
	Score         int32  `json:"score"`
	Wickets       int32  `json:"wickets"`
	Overs         string `json:"overs"`
	RunRate       string `json:"run_rate"`
	TargetRunRate string `json:"target_run_rate"`
}

type CricketTeamPlayerScore struct {
	ID               int64  `json:"id"`
	MatchID          int64  `json:"match_id"`
	TournamentID     int64  `json:"tournament_id"`
	TeamID           int64  `json:"team_id"`
	BattingOrBowling string `json:"batting_or_bowling"`
	Position         int64  `json:"position"`
	PlayerID         int64  `json:"player_id"`
	RunsScored       int64  `json:"runs_scored"`
	BallsFaced       int64  `json:"balls_faced"`
	Fours            int64  `json:"fours"`
	Sixes            int64  `json:"sixes"`
	WicketsTaken     int64  `json:"wickets_taken"`
	OversBowled      string `json:"overs_bowled"`
	RunsConceded     int64  `json:"runs_conceded"`
	WicketTakenBy    int64  `json:"wicket_taken_by"`
	WicketOf         int64  `json:"wicket_of"`
}

type CricketToss struct {
	ID           int64  `json:"id"`
	MatchID      int64  `json:"match_id"`
	TossDecision string `json:"toss_decision"`
	TossWin      int64  `json:"toss_win"`
}

type Follow struct {
	ID             int64     `json:"id"`
	FollowerOwner  string    `json:"follower_owner"`
	FollowingOwner string    `json:"following_owner"`
	CreatedAt      time.Time `json:"created_at"`
}

type FootballMatchesScore struct {
	ID            int64     `json:"id"`
	MatchID       int64     `json:"match_id"`
	TournamentID  int64     `json:"tournament_id"`
	TeamID        int64     `json:"team_id"`
	GoalFor       int64     `json:"goal_for"`
	GoalAgainst   int64     `json:"goal_against"`
	GoalScoreTime time.Time `json:"goal_score_time"`
}

type FootballScore struct {
	ID         int64 `json:"id"`
	MatchID    int64 `json:"match_id"`
	TeamID     int64 `json:"team_id"`
	FirstHalf  int32 `json:"first_half"`
	SecondHalf int32 `json:"second_half"`
	Goals      int64 `json:"goals"`
}

type FootballTeamPlayerScore struct {
	ID            int64     `json:"id"`
	MatchID       int64     `json:"match_id"`
	TeamID        int64     `json:"team_id"`
	PlayerID      int64     `json:"player_id"`
	TournamentID  int64     `json:"tournament_id"`
	GoalScoreTime time.Time `json:"goal_score_time"`
}

type GroupLeague struct {
	GroupID       int64  `json:"group_id"`
	GroupName     string `json:"group_name"`
	TournamentID  int64  `json:"tournament_id"`
	GroupStrength int64  `json:"group_strength"`
}

type GroupTeam struct {
	GroupTeamID  int64 `json:"group_team_id"`
	GroupID      int64 `json:"group_id"`
	TeamID       int64 `json:"team_id"`
	TournamentID int64 `json:"tournament_id"`
}

type JoinCommunity struct {
	ID            int64  `json:"id"`
	CommunityName string `json:"community_name"`
	Username      string `json:"username"`
}

type LikeThread struct {
	ID       int64  `json:"id"`
	ThreadID int64  `json:"thread_id"`
	Username string `json:"username"`
}

type Login struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type Match struct {
	ID             int64  `json:"id"`
	TournamentID   int64  `json:"tournament_id"`
	AwayTeamID     int64  `json:"away_team_id"`
	HomeTeamID     int64  `json:"home_team_id"`
	StartTimestamp int64  `json:"start_timestamp"`
	EndTimestamp   int64  `json:"end_timestamp"`
	StatusCode     int64  `json:"status_code"`
	Type           string `json:"type"`
}

type Message struct {
	ID               int64     `json:"id"`
	Content          string    `json:"content"`
	IsSeen           bool      `json:"is_seen"`
	SenderUsername   string    `json:"sender_username"`
	ReceiverUsername string    `json:"receiver_username"`
	SentAt           time.Time `json:"sent_at"`
	MediaUrl         string    `json:"media_url"`
	MediaType        string    `json:"media_type"`
}

type Messagemedium struct {
	MessageID int64 `json:"message_id"`
	MediaID   int64 `json:"media_id"`
}

type Organizer struct {
	OrganizerID   int64  `json:"organizer_id"`
	OrganizerName string `json:"organizer_name"`
	TournamentID  int64  `json:"tournament_id"`
}

type Player struct {
	ID        int64  `json:"id"`
	Name      string `json:"name"`
	Slug      string `json:"slug"`
	ShortName string `json:"short_name"`
	MediaUrl  string `json:"media_url"`
	Positions string `json:"positions"`
	Sports    string `json:"sports"`
	Country   string `json:"country"`
}

type PlayerProfile struct {
	ID                    int64  `json:"id"`
	PlayerName            string `json:"player_name"`
	PlayerAvatarUrl       string `json:"player_avatar_url"`
	PlayerBio             string `json:"player_bio"`
	PlayerSport           string `json:"player_sport"`
	PlayerPlayingCategory string `json:"player_playing_category"`
	Nation                string `json:"nation"`
}

type Profile struct {
	ID        int64     `json:"id"`
	Owner     string    `json:"owner"`
	FullName  string    `json:"full_name"`
	Bio       string    `json:"bio"`
	AvatarUrl string    `json:"avatar_url"`
	CoverUrl  string    `json:"cover_url"`
	CreatedAt time.Time `json:"created_at"`
}

type Session struct {
	ID           uuid.UUID `json:"id"`
	Username     string    `json:"username"`
	RefreshToken string    `json:"refresh_token"`
	UserAgent    string    `json:"user_agent"`
	ClientIp     string    `json:"client_ip"`
	ExpiresAt    time.Time `json:"expires_at"`
	CreatedAt    time.Time `json:"created_at"`
}

type Signup struct {
	MobileNumber string `json:"mobile_number"`
	Otp          string `json:"otp"`
}

type Team struct {
	ID        int64  `json:"id"`
	Name      string `json:"name"`
	Slug      string `json:"slug"`
	Shortname string `json:"shortname"`
	Admin     string `json:"admin"`
	MediaUrl  string `json:"media_url"`
	Gender    string `json:"gender"`
	National  bool   `json:"national"`
	Country   string `json:"country"`
	Type      string `json:"type"`
	Sports    string `json:"sports"`
}

type Thread struct {
	ID              int64     `json:"id"`
	Username        string    `json:"username"`
	CommunitiesName string    `json:"communities_name"`
	Title           string    `json:"title"`
	Content         string    `json:"content"`
	MediaType       string    `json:"media_type"`
	MediaUrl        string    `json:"media_url"`
	LikeCount       int64     `json:"like_count"`
	CreatedAt       time.Time `json:"created_at"`
}

type Tournament struct {
	ID             int64  `json:"id"`
	TournamentName string `json:"tournament_name"`
	Slug           string `json:"slug"`
	Sports         string `json:"sports"`
	Country        string `json:"country"`
	StatusCode     int64  `json:"status_code"`
	Level          string `json:"level"`
	StartTimestamp int64  `json:"start_timestamp"`
}

type TournamentMatch struct {
	MatchID      int64     `json:"match_id"`
	OrganizerID  int64     `json:"organizer_id"`
	TournamentID int64     `json:"tournament_id"`
	Team1ID      int64     `json:"team1_id"`
	Team2ID      int64     `json:"team2_id"`
	StartTime    time.Time `json:"start_time"`
	Stage        string    `json:"stage"`
	Sports       string    `json:"sports"`
}

type TournamentOrganization struct {
	ID              int64     `json:"id"`
	TournamentID    int64     `json:"tournament_id"`
	TournamentStart time.Time `json:"tournament_start"`
	PlayerCount     int64     `json:"player_count"`
	TeamCount       int64     `json:"team_count"`
	GroupCount      int64     `json:"group_count"`
	AdvancedTeam    int64     `json:"advanced_team"`
}

type TournamentOrganizer struct {
	OrganizerID  int64 `json:"organizer_id"`
	TournamentID int64 `json:"tournament_id"`
}

type TournamentStanding struct {
	StandingID     int64 `json:"standing_id"`
	TournamentID   int64 `json:"tournament_id"`
	GroupID        int64 `json:"group_id"`
	TeamID         int64 `json:"team_id"`
	Wins           int64 `json:"wins"`
	Loss           int64 `json:"loss"`
	Draw           int64 `json:"draw"`
	GoalFor        int64 `json:"goal_for"`
	GoalAgainst    int64 `json:"goal_against"`
	GoalDifference int64 `json:"goal_difference"`
	Points         int64 `json:"points"`
}

type TournamentTeam struct {
	TournamentID int64 `json:"tournament_id"`
	TeamID       int64 `json:"team_id"`
}

type Uploadmedium struct {
	ID        int64     `json:"id"`
	MediaUrl  string    `json:"media_url"`
	MediaType string    `json:"media_type"`
	SentAt    time.Time `json:"sent_at"`
}

type User struct {
	Username       string `json:"username"`
	MobileNumber   string `json:"mobile_number"`
	HashedPassword string `json:"hashed_password"`
	Role           string `json:"role"`
}
