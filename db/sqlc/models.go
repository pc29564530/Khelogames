// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0

package db

import (
	"database/sql"
	"time"

	"github.com/google/uuid"
)

type Club struct {
	ID        int64     `json:"id"`
	ClubName  string    `json:"club_name"`
	AvatarUrl string    `json:"avatar_url"`
	Sport     string    `json:"sport"`
	Owner     string    `json:"owner"`
	CreatedAt time.Time `json:"created_at"`
}

type ClubMember struct {
	ID         int64     `json:"id"`
	ClubName   string    `json:"club_name"`
	ClubMember string    `json:"club_member"`
	JoinedAt   time.Time `json:"joined_at"`
}

type Comment struct {
	ID          int64     `json:"id"`
	ThreadID    int64     `json:"thread_id"`
	Owner       string    `json:"owner"`
	CommentText string    `json:"comment_text"`
	CreatedAt   time.Time `json:"created_at"`
}

type Community struct {
	ID              int64     `json:"id"`
	Owner           string    `json:"owner"`
	CommunitiesName string    `json:"communities_name"`
	Description     string    `json:"description"`
	CommunityType   string    `json:"community_type"`
	CreatedAt       time.Time `json:"created_at"`
}

type Communitymessage struct {
	ID             int64     `json:"id"`
	CommunityName  string    `json:"community_name"`
	SenderUsername string    `json:"sender_username"`
	Content        string    `json:"content"`
	SentAt         time.Time `json:"sent_at"`
}

type Follow struct {
	ID             int64     `json:"id"`
	FollowerOwner  string    `json:"follower_owner"`
	FollowingOwner string    `json:"following_owner"`
	CreatedAt      time.Time `json:"created_at"`
}

type JoinCommunity struct {
	ID            int64  `json:"id"`
	CommunityName string `json:"community_name"`
	Username      string `json:"username"`
}

type LikeThread struct {
	ID       int64  `json:"id"`
	ThreadID int64  `json:"thread_id"`
	Username string `json:"username"`
}

type Login struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type Message struct {
	ID               int64     `json:"id"`
	Content          string    `json:"content"`
	IsSeen           bool      `json:"is_seen"`
	SenderUsername   string    `json:"sender_username"`
	ReceiverUsername string    `json:"receiver_username"`
	SentAt           time.Time `json:"sent_at"`
	MediaUrl         string    `json:"media_url"`
	MediaType        string    `json:"media_type"`
}

type Messagemedium struct {
	MessageID int64 `json:"message_id"`
	MediaID   int64 `json:"media_id"`
}
type Organizer struct {
	OrganizerID   int64  `json:"organizer_id"`
	OrganizerName string `json:"organizer_name"`
	TournamentID  int64  `json:"tournament_id"`
}

type Profile struct {
	ID        int64     `json:"id"`
	Owner     string    `json:"owner"`
	FullName  string    `json:"full_name"`
	Bio       string    `json:"bio"`
	AvatarUrl string    `json:"avatar_url"`
	CoverUrl  string    `json:"cover_url"`
	CreatedAt time.Time `json:"created_at"`
}

type Session struct {
	ID           uuid.UUID `json:"id"`
	Username     string    `json:"username"`
	RefreshToken string    `json:"refresh_token"`
	UserAgent    string    `json:"user_agent"`
	ClientIp     string    `json:"client_ip"`
	ExpiresAt    time.Time `json:"expires_at"`
	CreatedAt    time.Time `json:"created_at"`
}

type Signup struct {
	MobileNumber string `json:"mobile_number"`
	Otp          string `json:"otp"`
}

type Thread struct {
	ID              int64     `json:"id"`
	Username        string    `json:"username"`
	CommunitiesName string    `json:"communities_name"`
	Title           string    `json:"title"`
	Content         string    `json:"content"`
	MediaType       string    `json:"media_type"`
	MediaUrl        string    `json:"media_url"`
	LikeCount       int64     `json:"like_count"`
	CreatedAt       time.Time `json:"created_at"`
}

<<<<<<< HEAD
type Uploadmedium struct {
	ID        int64     `json:"id"`
	MediaUrl  string    `json:"media_url"`
	MediaType string    `json:"media_type"`
	SentAt    time.Time `json:"sent_at"`
=======
type Tournament struct {
	TournamentID   int64  `json:"tournament_id"`
	TournamentName string `json:"tournament_name"`
	SportType      string `json:"sport_type"`
	Format         string `json:"format"`
	TeamsJoined    int64  `json:"teams_joined"`
}

type TournamentGroup struct {
	GroupID      int64 `json:"group_id"`
	TournamentID int64 `json:"tournament_id"`
	TeamID       int64 `json:"team_id"`
}

type TournamentMatch struct {
	MatchID      int64        `json:"match_id"`
	OrganizerID  int64        `json:"organizer_id"`
	TournamentID int64        `json:"tournament_id"`
	Team1ID      int64        `json:"team1_id"`
	Team2ID      int64        `json:"team2_id"`
	DateOn       time.Time    `json:"date_on"`
	StartAt      time.Time    `json:"start_at"`
	Stage        string       `json:"stage"`
	CreatedAt    sql.NullTime `json:"created_at"`
	Sports       string       `json:"sports"`
}

type TournamentOrganization struct {
	ID              int64     `json:"id"`
	TournamentID    int64     `json:"tournament_id"`
	TournamentStart time.Time `json:"tournament_start"`
	PlayerCount     int64     `json:"player_count"`
	TeamCount       int64     `json:"team_count"`
	GroupCount      int64     `json:"group_count"`
	AdvancedTeam    int64     `json:"advanced_team"`
}

type TournamentOrganizer struct {
	OrganizerID  int64 `json:"organizer_id"`
	TournamentID int64 `json:"tournament_id"`
}

type TournamentStanding struct {
	StandingID     int64 `json:"standing_id"`
	TournamentID   int64 `json:"tournament_id"`
	GroupID        int64 `json:"group_id"`
	TeamID         int64 `json:"team_id"`
	Wins           int64 `json:"wins"`
	Loss           int64 `json:"loss"`
	Draw           int64 `json:"draw"`
	GoalFor        int64 `json:"goal_for"`
	GoalAgainst    int64 `json:"goal_against"`
	GoalDifference int64 `json:"goal_difference"`
	Points         int64 `json:"points"`
}

type TournamentTeam struct {
	TournamentID int64 `json:"tournament_id"`
	TeamID       int64 `json:"team_id"`
>>>>>>> 1142144 (added the functionlity for tournament)
}

type User struct {
	Username       string    `json:"username"`
	MobileNumber   string    `json:"mobile_number"`
	HashedPassword string    `json:"hashed_password"`
	CreatedAt      time.Time `json:"created_at"`
}
