// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: blogs.sql

package db

import (
	"context"
)

const createBlog = `-- name: CreateBlog :one
INSERT INTO blogs (
  username,
  title,
  content
) VALUES (
  $1, $2, $3
) RETURNING id, username, title, content, created_at
`

type CreateBlogParams struct {
	Username string `json:"username"`
	Title    string `json:"title"`
	Content  string `json:"content"`
}

func (q *Queries) CreateBlog(ctx context.Context, arg CreateBlogParams) (Blog, error) {
	row := q.db.QueryRowContext(ctx, createBlog, arg.Username, arg.Title, arg.Content)
	var i Blog
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Title,
		&i.Content,
		&i.CreatedAt,
	)
	return i, err
}

const getBlog = `-- name: GetBlog :one
SELECT id, username, title, content, created_at FROM blogs
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetBlog(ctx context.Context, id int64) (Blog, error) {
	row := q.db.QueryRowContext(ctx, getBlog, id)
	var i Blog
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Title,
		&i.Content,
		&i.CreatedAt,
	)
	return i, err
}
